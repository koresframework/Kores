buildscript {
    apply from: 'gradle/versions.gradle'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/dokka' }
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:$license_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
    }

}

group 'com.koresframework'

apply from: 'gradle/common.gradle'


publishing {
    repositories {
        maven {
            name = "Local"
            // change to point to your repo, e.g. http://my.org/repo
            url = "$buildDir/repo"
        }
        maven {
            name = "GitHubPackages"
            url = "https://maven.pkg.github.com/koresframework/kores"
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("TOKEN")
            }
        }
        maven {
            name = "GitLab"
            url "https://gitlab.com/api/v4/projects/28894889/packages/maven"
            credentials(HttpHeaderCredentials) {
                def ciToken = System.getenv("CI_JOB_TOKEN")
                if (ciToken != null && !ciToken.isEmpty()) {
                    name = "Job-Token"
                    value = System.getenv("CI_JOB_TOKEN")
                } else {
                    name = "Private-Token"
                    value = project.findProperty("GITLAB_TOKEN") ?: System.getenv("GITLAB_TOKEN")
                }
            }
            authentication {
                header(HttpHeaderAuthentication)
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.kotlin
            artifactId 'kores'

            artifact sourcesJar
        }
        mavenTest(MavenPublication) {
            artifactId 'kores-test'

            artifact testSourcesJar
            artifact testJar
        }
    }
}